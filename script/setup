#!/bin/bash
set -uo pipefail

remove_file_if_link_exists() {
  [[ -h "$1" ]] && rm -v "$1"
}

remove_file_if_exists() {
  [[ -f "$1" ]] && rm -v "$1"
}

link_files() {
  for i in $HOME/dotfiles/*; do
    local base_name="$(basename $i)"
    [[ $base_name =~ ^(Brewfile|LICENSE|script|bin|init.el)$ ]] && continue
    echo "👉 Linking $base_name..."
    remove_file_if_link_exists $HOME/.$base_name
    ln -sf $i $HOME/.$base_name
  done

  echo "👉 Linking bin..."
  remove_file_if_link_exists $HOME/bin
  ln -sf $HOME/dotfiles/bin $HOME/bin

  echo "👉 Linking emacs.d/init.el..."
  mkdir -p $HOME/.emacs.d
  remove_file_if_link_exists $HOME/.emacs.d/init.el
  ln -sf $HOME/dotfiles/init.el $HOME/.emacs.d/init.el

  echo "👉 Linking emacs.d/bookmarks..."
  remove_file_if_link_exists $HOME/.emacs.d/bookmarks
  ln -sf $HOME/dotfiles/bookmarks $HOME/.emacs.d/bookmarks

  echo "👉 Linking Brewfile..."
  remove_file_if_link_exists $HOME/Brewfile
  ln -sf $HOME/dotfiles/Brewfile $HOME/Brewfile

}

create_directories() {
  mkdir -p $HOME/projects/{personal,work}
  echo "👉 Creating directories on '~/projects'..."
}

install_elixir_ls() {
    echo "🤙🏽 Downloading Elixir-LS..."
    mkdir -p $HOME/.elixir_ls

    remove_file_if_exists $HOME/.elixir_ls/release.zip

    echo "DOWNLOAD PORRA"
    curl -L https://github.com/elixir-lsp/elixir-ls/releases/download/v0.7.0/elixir-ls.zip > $HOME/.elixir_ls/release.zip

    unzip -o $HOME/.elixir_ls/release.zip -d $HOME/.elixir_ls
    rm $HOME/.elixir_ls/release.zip
}

link_files
create_directories
install_elixir_ls

$HOME/dotfiles/script/osx_customization

echo "🎉  Done!"
